{
	"info": {
		"_postman_id": "c4c81197-7388-4cdf-83f5-58fdf37836ba",
		"name": "Postman_HW3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22335795"
	},
	"item": [
		{
			"name": "/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"token\", pm.response.json().token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/login?login=IrinaDKuz&password=password44",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "login",
							"value": "IrinaDKuz"
						},
						{
							"key": "password",
							"value": "password44"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе.",
							"var response = pm.response.json();",
							"var schema = {",
							"  ",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"person\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"u_age\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"u_name\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"string\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"u_age\",",
							"        \"u_name\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"qa_salary_after_12_months\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"qa_salary_after_6_months\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"start_qa_salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"person\",",
							"    \"qa_salary_after_12_months\",",
							"    \"qa_salary_after_6_months\",",
							"    \"start_qa_salary\"",
							"  ]",
							"}",
							"pm.test('Schema is valid', function () {",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"var request = JSON.parse(pm.request.body.raw);",
							"",
							"pm.test(\"Check response.u_salary_1_5_year is equal to 4 * request.salary\", function () {",
							"    pm.expect(+response.person.u_salary_1_5_year).to.eql(+request.salary * 4);",
							"});",
							"",
							"pm.test(\"Check response.qa_salary_after_12_months is equal to 2.9 * request.salary\", function () {",
							"    pm.expect(+response.qa_salary_after_12_months).to.eql(+request.salary * 2.9);",
							"});",
							"",
							"pm.test(\"Check response.qa_salary_after_6_months is equal to 2 * equest.salary\", function () {",
							"    pm.expect(+response.qa_salary_after_6_months).to.eql(+request.salary * 2);",
							"});",
							"",
							"// Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"var u_salary_1_5_year = response.person.u_salary_1_5_year;",
							"pm.environment.set('u_salary_1_5_year', u_salary_1_5_year);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\" : 31,\n    \"salary\" : 3000,\n    \"name\" : \"Irina\",\n    \"auth_token\": \"/s34lfgbj/None/jjd909/51926kjkWpqc1394None247484evny\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//  Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"console.log(pm.environment.get(\"u_salary_1_5_year\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{u_salary_1_5_year}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе.",
							"var response = pm.response.json();",
							"var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"array\",",
							"      \"items\": [",
							"        {",
							"          \"type\": \"integer\"",
							"        },",
							"        {",
							"          \"type\": \"string\"",
							"        },",
							"        {",
							"          \"type\": \"string\"",
							"        }",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"    ",
							"pm.test('Schema is valid', function () {",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"var request = pm.request.body.formdata.toObject();",
							"pm.test(\"Check response.salary[1] is equal to 2 * request.salary\", function () {",
							" pm.expect(+response.salary[1]).to.eql(+request.salary * 2);",
							"});",
							"pm.test(\"Check response.salary[2] is equal to 3 * request.salary\", function () {",
							" pm.expect(+response.salary[2]).to.eql(+request.salary * 3);",
							"});",
							"",
							"// Проверить, что 2-й элемент массива salary больше 1-го и 0-го",
							"pm.test(\"Check response.salary[2] is greater than the [0] and [1] \", function () {",
							" pm.expect(+response.salary[2] >= +response.salary[0]",
							"  && +response.salary[2] >= +response.salary[0]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Irina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "/test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе.",
							"var response = pm.response.json();",
							"var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"daily_food\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"daily_sleep\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"daily_food\",",
							"    \"daily_sleep\",",
							"    \"name\"",
							"  ]",
							"}",
							"pm.test('Schema is valid', function () {",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"var request = pm.request.body.formdata.toObject();",
							"pm.test(\"Check response.daily_food is equal to 0.012 * request.weight\", function () {",
							" pm.expect(+response.daily_food).to.eql(+request.weight * 0.012);",
							"});",
							"pm.test(\"Check response.daily_sleep is equal to 2.5 * request.weight\", function () {",
							" pm.expect(+response.daily_sleep).to.eql(+request.weight *  2.5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "60",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Irina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе.",
							"var response = pm.response.json();",
							"var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"family\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"children\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            },",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"children\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"family\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"pm.test('Schema is valid', function () {",
							"pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// Проверить что значение поля name = значению переменной name из окружения",
							"var request = pm.request.body.formdata.toObject();",
							"pm.environment.set(\"name\", request.name);",
							"",
							"pm.test(\"Check response.name is equal to environment.name\", function () {",
							" pm.expect(response.name).to.eql(pm.environment.get(\"name\"));",
							"});",
							"",
							"// Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age",
							"pm.test(\"Check response.age is equal to request.age\", function () {",
							" pm.expect(+response.age).to.eql(+request.age);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "31",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Irina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Взять любой объект из присланного списка, используя js random.",
							"// В объекте взять Cur_ID и передать через окружение в следующий запрос.",
							"",
							"var response = pm.response.json();",
							"var randomObject = response[Math.floor(Math.random() * response.length)];",
							"pm.environment.set(\"Cur_ID\", randomObject.Cur_ID);",
							"",
							"/* получить список валют",
							" итерировать список валют",
							" в каждой итерации отправлять запрос на сервер для получения курса каждой валюты",
							"*/",
							"",
							"var env_token = pm.environment.get(\"token\");",
							"",
							"for(let i = 0; i < response.length - 1 ; i++){",
							"   cur_ID = (response[i].Cur_ID);",
							"   sendPostRequest(cur_ID);",
							"};",
							"",
							"function sendPostRequest(cur_ID){",
							"var options = {",
							"    url: 'http://54.157.99.22:80/curr_byn',",
							"    method: 'POST',",
							"    header: {",
							"      'Content-Type': 'application/json'",
							"    },",
							"    body: {",
							"    mode: 'formdata',",
							"    formdata:  [",
							"  { key: 'auth_token', value: env_token },",
							"  { key: 'curr_code', value: cur_ID }",
							"],",
							"}",
							"}",
							"// Обработка ответа",
							"pm.sendRequest(options, function (err, response) {",
							"/* ",
							" если возвращается 500 код, переходим к следующей итреации",
							" если получаем 200 код, проверяем response json на наличие поля \"Cur_OfficialRate\"",
							" если поле есть, пишем в консоль инфу про фалюту в виде response",
							"{",
							"    \"Cur_Abbreviation\": str",
							"    \"Cur_ID\": int,",
							"    \"Cur_Name\": str,",
							"    \"Cur_OfficialRate\": float,",
							"    \"Cur_Scale\": int,",
							"    \"Date\": str",
							"}",
							" переходим к следующей итерации */",
							"    console.log(\"It's status code: \" + response.code);",
							"        if (response.code === 500) {",
							"        }",
							"\t\tif (response.code === 200) {",
							"\t\t\tif (response.json().hasOwnProperty(\"Cur_OfficialRate\")) ",
							"                console.log(response.json());",
							"            }",
							"  });",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/currency",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "/curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "{{Cur_ID}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://54.157.99.22:80/curr_byn",
					"protocol": "http",
					"host": [
						"54",
						"157",
						"99",
						"22"
					],
					"port": "80",
					"path": [
						"curr_byn"
					]
				}
			},
			"response": []
		}
	]
}